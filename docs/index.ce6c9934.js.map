{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-615bca83b7f7f8aa.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-9ace3e3162212672.js","../script.ts","test.tsx"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"cthUU\\\":\\\"index.ce6c9934.js\\\",\\\"aoxai\\\":\\\"pine.d54da871.webp\\\"}\"));","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('cthUU') + require('./helpers/bundle-manifest').resolve(\"aoxai\");","export class Cropo {\n  // zoom range input\n  private slider: HTMLInputElement | undefined;\n\n  // canvas related variables\n  private canvas: HTMLCanvasElement;\n  private canvasContext: CanvasRenderingContext2D;\n  private canvasWidth: number = 0;\n  private canvasHeight: number = 0;\n\n  // image related variables\n  private fit: boolean = true;\n  private img: HTMLImageElement;\n  private imgHeight: number;\n  private imgWidth: number;\n  private scale: number;\n  private baseScale: number = 1;\n  private maxScale: number = 5;\n  private minScale: number = 1;\n  private originalWidth: number;\n  private originalHeight: number;\n  private ratio: number;\n\n  // Pointer drag related variables\n  private isDown: boolean;\n  private pointerX: number\n  private pointerY: number;\n\n  // the accumulated horizontal(X) & vertical(Y) panning the user has done in total\n  private netPanningX: number;\n  private netPanningY: number;\n\n  // zoom and pinch related variables\n  private originX: number\n  private originY: number;\n  private eventCache: PointerEvent[];\n  private prevDiff: number;\n\n  // TODO: remove optional from version 1.0.0\n  constructor (options: {\n    imageUrl?: string;\n    onImageLoad?: () => void;\n    canvas?: HTMLCanvasElement,\n    rangeInput?: HTMLInputElement,\n    height?: number,\n    width?: number,\n    x?: number,\n    y?: number,\n    fit?: boolean,\n    baseScale?: number;\n    maxScale?: number;\n    minScale?: number;\n  }) {\n    this.baseScale = options?.baseScale || this.baseScale\n    this.maxScale = options?.maxScale || this.maxScale\n    this.minScale = options?.minScale || this.minScale\n    this.loadCanvas(options?.canvas || document.createElement('canvas'), options?.width, options?.height)\n    options?.rangeInput && this.loadSlider(options.rangeInput)\n    if (options?.imageUrl) {\n      this.loadImageFromUrl(options?.imageUrl, options?.fit, () => {\n        this.move(options?.x || 0, options?.y || 0)\n        options?.onImageLoad?.()\n      })\n    }\n  }\n\n  // define function to clamp number\n  private clamp (num: number, from: number, to: number) {\n    return Math.max(from, Math.min(num, to))\n  }\n\n  // define debounce function\n  private debounce<Params extends any[]> (func: (...args: Params) => any, timeout: number): (...args: Params) => void {\n    let timer\n    return (...args: Params) => {\n      clearTimeout(timer)\n      timer = setTimeout(() => {\n        func(...args)\n      }, timeout)\n    }\n  }\n\n  // initialize pointer related variables\n  private initPointerAndZoom () {\n    this.isDown = false\n    this.netPanningX = 0\n    this.netPanningY = 0\n    this.eventCache = []\n    this.prevDiff = -1\n    if (this.slider) this.slider.value = String(this.baseScale)\n  }\n\n  // draw image\n  private draw () {\n    this.canvasContext?.clearRect(0, 0, this.canvasWidth, this.canvasHeight)\n    this.canvasContext?.drawImage(this.img, this.netPanningX, this.netPanningY, this.imgWidth, this.imgHeight)\n  }\n\n  // fix range\n  private fixScale () {\n    if (this.fit) { this.scale = Math.min(this.imgWidth / this.canvasWidth, this.imgWidth / this.canvasHeight) || this.baseScale } else { this.scale = Math.min(this.imgWidth / this.originalWidth, this.imgWidth / this.originalHeight) || this.baseScale }\n    if (this.slider) this.slider.value = String(this.scale)\n  }\n\n  // recalculate images related variables\n  private onImageLoad () {\n    if (this.fit) {\n      this.scale = Math.max(this.canvasHeight / this.imgHeight, this.canvasWidth / this.imgWidth)\n      this.imgHeight *= this.scale\n      this.imgWidth *= this.scale\n    }\n    this.pointerX = this.pointerY = 0\n    this.originalWidth = this.imgWidth\n    this.originalHeight = this.imgHeight\n    this.ratio = this.originalHeight / this.originalWidth\n    this.draw()\n  }\n\n  // get the median point of pointers\n  private getPointerAverage () {\n    let x = 0; let y = 0\n    for (let i = 0; i < this.eventCache.length; i++) {\n      x += this.eventCache[i].offsetX\n      y += this.eventCache[i].offsetY\n    }\n    x = x / this.eventCache.length\n    y = y / this.eventCache.length\n    return [x, y]\n  }\n\n  // calc origin for zoom and pinch\n  private calcOrigin (x: number, y: number) {\n    this.originX = (-this.netPanningX + x) / this.imgWidth\n    this.originY = (-this.netPanningY + y) / this.imgHeight\n  }\n\n  public move (x: number, y: number) {\n    // the last mousemove event\n    const dx = x - this.pointerX\n    const dy = y - this.pointerY\n    // reset the vars for next mousemove\n    this.pointerX = x\n    this.pointerY = y\n    // accumulate the net panning done\n    this.netPanningX = this.fit ? this.clamp(this.netPanningX + dx, this.canvasWidth - this.imgWidth, 0) : this.netPanningX + dx\n    this.netPanningY = this.fit ? this.clamp(this.netPanningY + dy, this.canvasHeight - this.imgHeight, 0) : this.netPanningY + dy\n  }\n\n  private drawZoom (deltaX: number, deltaY: number) {\n    this.netPanningX = this.fit ? this.clamp(this.netPanningX - deltaX * this.originX, this.canvasWidth - this.imgWidth, 0) : this.netPanningX - deltaX * this.originX\n    this.netPanningY = this.fit ? this.clamp(this.netPanningY - deltaY * this.originY, this.canvasHeight - this.imgHeight, 0) : this.netPanningY - deltaY * this.originY\n  }\n\n  private zoomDelta (deltaX: number, deltaY: number) {\n    const newWidth = this.imgWidth + deltaX\n    if (newWidth < this.originalWidth || this.imgHeight + deltaY < this.originalHeight) return\n    if (newWidth / this.originalWidth > this.maxScale || newWidth / this.originalWidth < this.minScale) return\n    if (this.slider) this.slider.value = String(this.scale = newWidth / this.originalWidth)\n    // calc new size\n    this.imgWidth = newWidth\n    this.imgHeight += deltaY\n    // accumulate the net panning done\n    this.drawZoom(deltaX, deltaY)\n  }\n\n  private zoomScale (scale: number) {\n    if (scale > this.maxScale || scale < this.minScale) return\n    this.prevDiff = -1\n    let deltaX = this.imgWidth\n    let deltaY = this.imgHeight\n    // calc new size\n    this.imgWidth = this.originalWidth * scale\n    this.imgHeight = this.originalHeight * scale\n    // calc diff\n    deltaX -= this.imgWidth\n    deltaY -= this.imgHeight\n    //\n    this.calcOrigin(this.canvasWidth / 2, this.canvasHeight / 2)\n    this.drawZoom(-deltaX, -deltaY)\n  }\n\n  private pinch () {\n    if (this.eventCache.length === 2) {\n      // Calculate the distance between the two pointers\n      const curDiff = Math.hypot(this.eventCache[0].offsetX - this.eventCache[1].offsetX, this.eventCache[0].offsetY - this.eventCache[1].offsetY)\n      // zoom into image\n      if (this.prevDiff > 0) {\n        const delta = curDiff - this.prevDiff\n        this.zoomDelta(delta, delta * this.ratio)\n      }\n      this.prevDiff = curDiff\n    }\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                               Event Handlers                               */\n  /* -------------------------------------------------------------------------- */\n\n  private onSliderMove (e: Event) {\n    const value = (e.target as HTMLInputElement).value\n    this.scale = +value\n    this.zoomScale(this.scale)\n    this.draw()\n  };\n\n  private onPointerdown (e: PointerEvent) {\n    // This event is cached to support 2-finger gestures\n    this.eventCache.push(e);\n    // refresh move origin\n    [this.pointerX, this.pointerY] = this.getPointerAverage()\n    this.isDown = true\n  };\n\n  private onPointerUp (e: PointerEvent) {\n    // If the number of pointers down is less than two then reset diff tracker\n    this.eventCache = this.eventCache.filter(ev => ev.pointerId !== e.pointerId)\n    if (this.eventCache.length < 2) {\n      this.prevDiff = -1\n    }\n    [this.pointerX, this.pointerY] = this.getPointerAverage()\n    if (this.eventCache.length === 0) this.isDown = false\n  };\n\n  private onPointermove (e: PointerEvent) {\n    if (!this.isDown) return\n    // Find this event in the cache and update its record with this event\n    for (let i = 0; i < this.eventCache.length; i++) {\n      if (e.pointerId === this.eventCache[i].pointerId) {\n        this.eventCache[i] = e; break\n      }\n    }\n    // calc x,y and\n    const [x, y] = this.getPointerAverage()\n    this.move(x, y)\n    this.pinch()\n    this.calcOrigin(this.canvasWidth / 2, this.canvasHeight / 2)\n    this.draw()\n  };\n\n  private onResize = this.debounce<[]>(() => {\n    const deltaX = this.canvas.offsetWidth - this.canvasWidth\n    const deltaY = this.canvas.offsetHeight - this.canvasHeight\n    this.canvasWidth = this.canvas.width = this.canvas.offsetWidth\n    this.canvasHeight = this.canvas.height = this.canvas.offsetHeight\n    if (this.fit && this.imgWidth < this.canvasWidth) {\n      this.netPanningX = 0\n      this.onImageLoad()\n    } else if (this.fit && this.imgHeight < this.canvasHeight) {\n      this.netPanningY = 0\n      this.onImageLoad()\n    } else {\n      this.netPanningX += deltaX / 2\n      this.netPanningY += deltaY / 2\n      this.originalWidth = this.canvasWidth\n      this.originalHeight = this.canvasWidth * this.ratio\n      this.draw()\n    }\n    this.fixScale()\n  }, 300)\n\n  private prevent (e: Event) {\n    e.preventDefault()\n    e.stopPropagation()\n  }\n\n  private leadListeners () {\n    this.canvas.addEventListener('pointerdown', (e) => { this.prevent(e); this.onPointerdown(e) })\n    this.canvas.addEventListener('pointermove', (e) => { this.prevent(e); this.onPointermove(e) })\n    this.canvas.addEventListener('pointerout', (e) => { this.prevent(e); this.onPointerUp(e) })\n    this.canvas.addEventListener('pointerup', (e) => { this.prevent(e); this.onPointerUp(e) })\n    this.canvas.addEventListener('pointercancel', (e) => { this.prevent(e); this.onPointerUp(e) })\n    this.canvas.addEventListener('pointerleave', (e) => { this.prevent(e); this.onPointerUp(e) })\n    new ResizeObserver(this.onResize).observe(this.canvas)\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   Loading                                  */\n  /* -------------------------------------------------------------------------- */\n\n  public loadSlider (el: HTMLInputElement) {\n    this.slider = el\n    this.slider.value = String(this.scale || this.baseScale)\n    this.slider.addEventListener('input', (e) => { this.prevent(e); this.onSliderMove(e) })\n  }\n\n  public loadCanvas (el: HTMLCanvasElement, width?: number, height?: number) {\n    this.canvas = el\n    this.canvasContext = this.canvas.getContext('2d')\n    this.canvasWidth = this.canvas.width = width || this.canvas.offsetWidth\n    this.canvasHeight = this.canvas.height = height || this.canvas.offsetHeight\n    this.leadListeners()\n  }\n\n  public loadImageFromUrl (url: string, fitImage: boolean = true, onload?: () => void) {\n    if (!this.canvas) throw Error('first call loadCanvas')\n    this.fit = fitImage\n    this.img = new Image()\n    this.img.onload = () => {\n      this.initPointerAndZoom()\n      this.imgHeight = this.img.naturalHeight\n      this.imgWidth = this.img.naturalWidth\n      this.onImageLoad()\n      onload?.()\n    }\n    this.img.src = url\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   Export                                   */\n  /* -------------------------------------------------------------------------- */\n\n  public getDataUrl (scale: number = 1) {\n    const canvas = document.createElement('canvas')\n    canvas.width = this.canvasWidth * scale\n    canvas.height = this.canvasHeight * scale\n    const context = canvas.getContext('2d')\n    context.drawImage(this.img, this.netPanningX * scale, this.netPanningY * scale, this.imgWidth * scale, this.imgHeight * scale)\n    return canvas.toDataURL()\n  }\n\n  public download (scale: number = 1) {\n    const link = document.createElement('a')\n    link.download = 'canvas.png'\n    link.href = this.getDataUrl(scale)\n    link.click()\n  }\n\n  public getCropInfo () {\n    return ({\n      width: this.imgWidth,\n      imgHeight: this.imgHeight,\n      x: this.netPanningX,\n      y: this.netPanningY\n    })\n  }\n}\n\nconst cr = new Cropo({})\n\n/**\n * @deprecated Since version 0.6. Will be deleted in version 1.0. Use Cropo instance instead. (example: cont cr= new Cropo(config); cr.download();)\n */\nexport function download (...arg: Parameters<typeof cr.download>) { cr.download(...arg) };\n/**\n * @deprecated Since version 0.6. Will be deleted in version 1.0. Use Cropo instance instead. (example: new Cropo(config))\n */\nexport function loadCanvas (...arg: Parameters<typeof cr.loadCanvas>) { cr.loadCanvas(...arg) };\n/**\n * @deprecated Since version 0.6. Will be deleted in version 1.0. Use Cropo instance instead. (example: cont cr= new Cropo(config); cr.loadImageFromUrl();)\n */\nexport function loadImageFromUrl (...arg: Parameters<typeof cr.loadImageFromUrl>) { cr.loadImageFromUrl(...arg) };\n/**\n * @deprecated Since version 0.6. Will be deleted in version 1.0. Use Cropo instance instead. (example: new Cropo(config))\n */\nexport function loadSlider (...arg: Parameters<typeof cr.loadSlider>) { cr.loadSlider(...arg) };\n/**\n * @deprecated Since version 0.6. Will be deleted in version 1.0. Use Cropo instance instead. (example: cont cr= new Cropo(config); cr.move();)\n */\nexport function move (...arg: Parameters<typeof cr.move>) { cr.move(...arg) };\n/**\n * @deprecated Since version 0.6. Will be deleted in version 1.0. Use Cropo instance instead.(example: cont cr= new Cropo(config); cr.getCropInfo();)\n */\nexport function getCropInfo (...arg: Parameters<typeof cr.getCropInfo>) { cr.getCropInfo(...arg) };\n/**\n * @deprecated Since version 0.6. Will be deleted in version 1.0. Use Cropo instance instead. (example: cont cr= new Cropo(config); cr.getDataUrl();)\n */\nexport function getDataUrl (...arg: Parameters<typeof cr.getDataUrl>) { cr.getDataUrl(...arg) };\n","import image from './pine.webp'\r\nimport { Cropo } from '../script'\r\n\r\nconst cr = new Cropo({\r\n  imageUrl: image,\r\n  canvas: document.getElementById('canvas') as HTMLCanvasElement,\r\n  rangeInput: document.getElementById('myRange') as HTMLInputElement\r\n})\r\n\r\n//\r\nconst filePicker: HTMLInputElement = document.getElementById('filePicker') as HTMLInputElement\r\n\r\nfilePicker.addEventListener('change', (e) => {\r\n  const file = (filePicker as HTMLInputElement).files?.[0]\r\n  if (!file) return\r\n  const fr = new FileReader()\r\n  fr.onload = () => cr.loadImageFromUrl(String(fr.result))\r\n  fr.readAsDataURL(file)\r\n})\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                    page                                    */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nconst dropdown = document.getElementById('dropdown')\r\n\r\ndocument.getElementById('menu').addEventListener('click', () => {\r\n  dropdown.classList.toggle('hidden')\r\n})\r\n\r\ndocument.getElementById('download').addEventListener('click', () => {\r\n  cr.download()\r\n})\r\n"],"names":["$8b4d1930797b255e$export$6503ec6e8aabbaf","$8b4d1930797b255e$export$f7ad0328861e2f03","$8b4d1930797b255e$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$f29cd6c67ea13581$export$bdfd709ae4826697","$f29cd6c67ea13581$var$bundleURL","$f29cd6c67ea13581$var$getBaseURL","url","replace","value","err","matches","stack","match","$f29cd6c67ea13581$var$getBundleURL","$255f04e845ee0d08$exports","getBundleURL","resolve","$dd535ca4f161956d$export$f43653f9482b7473","options","this","canvasWidth","canvasHeight","fit","baseScale","maxScale","minScale","onResize","debounce","deltaX","canvas","offsetWidth","deltaY","offsetHeight","width","height","imgWidth","netPanningX","onImageLoad","imgHeight","netPanningY","originalWidth","originalHeight","ratio","draw","fixScale","loadCanvas","document","createElement","rangeInput","loadSlider","imageUrl","loadImageFromUrl","move","x","y","clamp","num","from","to","Math","max","min","func","timeout","timer","args","clearTimeout","setTimeout","initPointerAndZoom","isDown","eventCache","prevDiff","slider","String","canvasContext","clearRect","drawImage","img","scale","pointerX","pointerY","getPointerAverage","offsetX","offsetY","calcOrigin","originX","originY","dx","dy","drawZoom","zoomDelta","newWidth","zoomScale","pinch","curDiff","hypot","delta","onSliderMove","e","target","onPointerdown","push","onPointerUp","filter","ev","pointerId","onPointermove","prevent","preventDefault","stopPropagation","leadListeners","addEventListener","ResizeObserver","observe","el","getContext","fitImage","onload","Image","naturalHeight","naturalWidth","src","getDataUrl","toDataURL","download","link","href","click","getCropInfo","$d06d36ffd4d05eea$var$cr","$parcel$interopDefault","getElementById","$d06d36ffd4d05eea$var$filePicker","file","files","fr","FileReader","result","readAsDataURL","$d06d36ffd4d05eea$var$dropdown","classList","toggle"],"version":3,"file":"index.ce6c9934.js.map"}